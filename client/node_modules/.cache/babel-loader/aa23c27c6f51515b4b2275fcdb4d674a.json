{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/davidsolsona/Documents/GitHub/Legacy/solo-project/client/src/components/Teacher/TestCard/AssignTest/SelectStudent/SelectStudent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styles from './SelectStudent.module.scss';\n\nconst SelectStudent = props => {\n  _s();\n\n  const [selected, setSelected] = useState(false);\n\n  const toggleSelected = () => setSelected(!selected);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: selected ? styles.Selected : styles.Unselected,\n    onClick: () => {\n      toggleSelected();\n      props.selectNameHandler(props.student);\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SelectStudent, \"jTu/AeLw5BOy6ZW1dDNXzAJjzwE=\");\n\n_c = SelectStudent;\nexport default SelectStudent;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectStudent\");","map":{"version":3,"sources":["/Users/davidsolsona/Documents/GitHub/Legacy/solo-project/client/src/components/Teacher/TestCard/AssignTest/SelectStudent/SelectStudent.js"],"names":["React","useState","styles","SelectStudent","props","selected","setSelected","toggleSelected","Selected","Unselected","selectNameHandler","student","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,6BAAnB;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAAA;;AAE7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMM,cAAc,GAAG,MAAMD,WAAW,CAAC,CAACD,QAAF,CAAxC;;AACA,sBACE;AACE,IAAA,SAAS,EAAEA,QAAQ,GAAGH,MAAM,CAACM,QAAV,GAAqBN,MAAM,CAACO,UADjD;AAEE,IAAA,OAAO,EAAE,MAAM;AACbF,MAAAA,cAAc;AACdH,MAAAA,KAAK,CAACM,iBAAN,CAAwBN,KAAK,CAACO,OAA9B;AACD,KALH;AAAA,cAOEP,KAAK,CAACQ;AAPR;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAfD;;GAAMT,a;;KAAAA,a;AAiBN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport styles from './SelectStudent.module.scss';\n\nconst SelectStudent = props => {\n\n  const [selected, setSelected] = useState(false);\n\n  const toggleSelected = () => setSelected(!selected)\n  return (\n    <div \n      className={selected ? styles.Selected : styles.Unselected}\n      onClick={() => {\n        toggleSelected();\n        props.selectNameHandler(props.student);\n      }\n      }\n    >{props.children}</div>\n  );\n};\n\nexport default SelectStudent;\n"]},"metadata":{},"sourceType":"module"}