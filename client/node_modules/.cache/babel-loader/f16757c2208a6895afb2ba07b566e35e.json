{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/davidsolsona/Documents/GitHub/Legacy/solo-project/client/src/components/Student/StudentDashboard/StudentTestList/StudentTestList.js\";\nimport React from 'react';\nimport PendingTest from '../PendingTest/PendingTest';\nimport CompletedTest from '../CompletedTest/CompletedTest';\nimport styles from './StudentTestList.module.scss';\n\nconst StudentTestList = props => {\n  let listTitle;\n  let listContent;\n\n  if (props.listType === 'pendingtests') {\n    listTitle = 'New Challenges!';\n    listContent = props.student.pendingtests ? props.student.pendingtests.map(t => /*#__PURE__*/_jsxDEV(PendingTest, {\n      test: t\n    }, t.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You have no tests!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }, this);\n  } else {\n    listTitle = 'Completed';\n    listContent = props.student.pendingtests ? props.student.completedtests.map(t => /*#__PURE__*/_jsxDEV(CompletedTest, {\n      test: t\n    }, t.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You have no tests!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.ListType,\n      children: listTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.StudentTestList,\n      children: listContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_c = StudentTestList;\nexport default StudentTestList;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentTestList\");","map":{"version":3,"sources":["/Users/davidsolsona/Documents/GitHub/Legacy/solo-project/client/src/components/Student/StudentDashboard/StudentTestList/StudentTestList.js"],"names":["React","PendingTest","CompletedTest","styles","StudentTestList","props","listTitle","listContent","listType","student","pendingtests","map","t","id","completedtests","ListType"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,MAAP,MAAmB,+BAAnB;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAE/B,MAAIC,SAAJ;AAEA,MAAIC,WAAJ;;AAEA,MAAIF,KAAK,CAACG,QAAN,KAAmB,cAAvB,EAAuC;AACrCF,IAAAA,SAAS,GAAG,iBAAZ;AACAC,IAAAA,WAAW,GAAGF,KAAK,CAACI,OAAN,CAAcC,YAAd,GACZL,KAAK,CAACI,OAAN,CAAcC,YAAd,CAA2BC,GAA3B,CAAgCC,CAAD,iBAC7B,QAAC,WAAD;AAAwB,MAAA,IAAI,EAAEA;AAA9B,OAAkBA,CAAC,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,YADF,CADY,gBAIT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJL;AAKD,GAPD,MAOO;AACLP,IAAAA,SAAS,GAAG,WAAZ;AACAC,IAAAA,WAAW,GAAGF,KAAK,CAACI,OAAN,CAAcC,YAAd,GACZL,KAAK,CAACI,OAAN,CAAcK,cAAd,CAA6BH,GAA7B,CAAkCC,CAAD,iBAC/B,QAAC,aAAD;AAA0B,MAAA,IAAI,EAAEA;AAAhC,OAAoBA,CAAC,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,YADF,CADY,gBAIT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJL;AAKD;;AAED,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEV,MAAM,CAACY,QAAvB;AAAA,gBACGT;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAEH,MAAM,CAACC,eAAvB;AAAA,gBACGG;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAhCD;;KAAMH,e;AAkCN,eAAeA,eAAf","sourcesContent":["import React from 'react';\n\nimport PendingTest from '../PendingTest/PendingTest';\nimport CompletedTest from '../CompletedTest/CompletedTest';\nimport styles from './StudentTestList.module.scss';\n\nconst StudentTestList = props => {\n\n  let listTitle;\n\n  let listContent;\n\n  if (props.listType === 'pendingtests') {\n    listTitle = 'New Challenges!';\n    listContent = props.student.pendingtests ? (\n      props.student.pendingtests.map((t) => (\n        <PendingTest key={t.id} test={t}/>\n      ))\n    ) : (<p>You have no tests!</p>);\n  } else {\n    listTitle = 'Completed';\n    listContent = props.student.pendingtests ? (\n      props.student.completedtests.map((t) => (\n        <CompletedTest key={t.id} test={t}/>\n      ))\n    ) : (<p>You have no tests!</p>);\n  }\n\n  return (\n    <div>\n      <div className={styles.ListType}>\n        {listTitle}\n      </div>\n      <div className={styles.StudentTestList}>\n        {listContent}\n      </div>\n    </div>\n  );\n};\n\nexport default StudentTestList;\n"]},"metadata":{},"sourceType":"module"}