{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/davidsolsona/Documents/GitHub/Legacy/solo-project/client/src/components/Student/TestDashboard/TestDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Feedback from './Feedback/Feedback';\nimport Question from './Question/Question';\nimport styles from './TestDashboard.module.scss';\n\nconst TestDashboard = props => {\n  _s();\n\n  const [currentQ, setCurrentQ] = useState(0);\n  const quizz = useSelector(state => state.currentQuizz);\n  const [showingFeedback, setShowingFeedback] = useState(false); // HERE\n\n  const [quizzResults, setQuizzResults] = useState({});\n\n  const nextButton = completed => {\n    if (!completed) {\n      setCurrentQ(current => current + 1);\n    } else {\n      setCurrentQ(0);\n      setQuizzResults(completed);\n      setShowingFeedback(true);\n    }\n  };\n\n  const question = quizz.questions ? /*#__PURE__*/_jsxDEV(Question, {\n    question: quizz.questions[currentQ],\n    quizz: quizz,\n    currQuest: currentQ,\n    nextButton: nextButton\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 6\n  }, this) : 'Loading';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.TestDashboard,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Content,\n      children: showingFeedback ? /*#__PURE__*/_jsxDEV(Feedback, {\n        quizzResults: quizzResults,\n        confetti: showingFeedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 28\n      }, this) : question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Contentbg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TestDashboard, \"qH37mJG+i+TB96h7TgJuv+BYiP0=\", false, function () {\n  return [useSelector];\n});\n\n_c = TestDashboard;\nexport default TestDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestDashboard\");","map":{"version":3,"sources":["/Users/davidsolsona/Documents/GitHub/Legacy/solo-project/client/src/components/Student/TestDashboard/TestDashboard.js"],"names":["React","useState","useSelector","Feedback","Question","styles","TestDashboard","props","currentQ","setCurrentQ","quizz","state","currentQuizz","showingFeedback","setShowingFeedback","quizzResults","setQuizzResults","nextButton","completed","current","question","questions","Content","Contentbg"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAAA;;AAE7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAMS,KAAK,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,YAAhB,CAAzB;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCb,QAAQ,CAAC,KAAD,CAAtD,CAJ6B,CAIkC;;AAC/D,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMgB,UAAU,GAAIC,SAAD,IAAe;AAChC,QAAI,CAACA,SAAL,EAAgB;AACdT,MAAAA,WAAW,CAACU,OAAO,IAAIA,OAAO,GAAG,CAAtB,CAAX;AACD,KAFD,MAEO;AACLV,MAAAA,WAAW,CAAC,CAAD,CAAX;AACAO,MAAAA,eAAe,CAACE,SAAD,CAAf;AACAJ,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;AACF,GARD;;AAUA,QAAMM,QAAQ,GAAGV,KAAK,CAACW,SAAN,gBACd,QAAC,QAAD;AACC,IAAA,QAAQ,EAAEX,KAAK,CAACW,SAAN,CAAgBb,QAAhB,CADX;AAEC,IAAA,KAAK,EAAEE,KAFR;AAGC,IAAA,SAAS,EAAEF,QAHZ;AAIC,IAAA,UAAU,EAAES;AAJb;AAAA;AAAA;AAAA;AAAA,UADc,GAOf,SAPF;AASA,sBACE;AAAK,IAAA,SAAS,EAAEZ,MAAM,CAACC,aAAvB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAED,MAAM,CAACiB,OAAvB;AAAA,gBACGT,eAAe,gBAAG,QAAC,QAAD;AAAU,QAAA,YAAY,EAAEE,YAAxB;AACnB,QAAA,QAAQ,EAAEF;AADS;AAAA;AAAA;AAAA;AAAA,cAAH,GACeO;AAFjC;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAEf,MAAM,CAACkB;AAAvB;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAnCD;;GAAMjB,a;UAGUJ,W;;;KAHVI,a;AAqCN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Feedback from './Feedback/Feedback';\nimport Question from './Question/Question';\nimport styles from './TestDashboard.module.scss';\n\nconst TestDashboard = props => {\n\n  const [currentQ, setCurrentQ] = useState(0);\n  const quizz = useSelector(state => state.currentQuizz);\n  const [showingFeedback, setShowingFeedback] = useState(false); // HERE\n  const [quizzResults, setQuizzResults] = useState({});\n  \n  const nextButton = (completed) => {\n    if (!completed) {\n      setCurrentQ(current => current + 1);\n    } else {\n      setCurrentQ(0);\n      setQuizzResults(completed)\n      setShowingFeedback(true);\n    }\n  };\n\n  const question = quizz.questions ? \n    (<Question \n      question={quizz.questions[currentQ]}\n      quizz={quizz}\n      currQuest={currentQ}\n      nextButton={nextButton}\n    />) :\n    'Loading';\n\n  return (\n    <div className={styles.TestDashboard}>\n      <div className={styles.Content}>\n        {showingFeedback ? <Feedback quizzResults={quizzResults} \n        confetti={showingFeedback}/> : question}\n      </div>\n      <div className={styles.Contentbg}/>\n    </div>\n  );\n};\n\nexport default TestDashboard;\n"]},"metadata":{},"sourceType":"module"}