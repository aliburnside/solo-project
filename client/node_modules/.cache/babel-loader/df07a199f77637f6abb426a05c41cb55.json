{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/davidsolsona/Documents/GitHub/Legacy/solo-project/client/src/components/Teacher/Students/StudentList/StudentProgress/StudentProgress.js\";\nimport React from 'react';\nimport styles from './StudentProgress.module.scss';\n\nconst StudentProgress = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.StudentProgress,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Header,\n      children: [\"Completed tests:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.Completed,\n        children: props.student.completedtests.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.CompletedInfo,\n      children: props.student.completedtests.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.TestContainer,\n        children: props.student.completedtests.map((test, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.Test,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.TestTitle,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: test.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [test.result.percentage, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.TestQuestions,\n            children: test.result.questions.map((q, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [q.question, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: q.correct ? 'green' : '#E63046'\n                },\n                children: q.option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 45\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Header,\n      children: [\"Pending tests:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.Pending,\n        children: props.student.pendingtests.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.PendingContainer,\n      children: props.student.pendingtests.length ? props.student.pendingtests.map((test, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: test.title\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = StudentProgress;\nexport default StudentProgress;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentProgress\");","map":{"version":3,"sources":["/Users/davidsolsona/Documents/GitHub/Legacy/solo-project/client/src/components/Teacher/Students/StudentList/StudentProgress/StudentProgress.js"],"names":["React","styles","StudentProgress","props","Header","Completed","student","completedtests","length","CompletedInfo","TestContainer","map","test","i","Test","TestTitle","title","result","percentage","TestQuestions","questions","q","question","color","correct","option","Pending","pendingtests","PendingContainer"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,+BAAnB;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,sBACE;AAAK,IAAA,SAAS,EAAEF,MAAM,CAACC,eAAvB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAED,MAAM,CAACG,MAAvB;AAAA,kDAEE;AAAM,QAAA,SAAS,EAAEH,MAAM,CAACI,SAAxB;AAAA,kBACGF,KAAK,CAACG,OAAN,CAAcC,cAAd,CAA6BC;AADhC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,SAAS,EAAEP,MAAM,CAACQ,aAAvB;AAAA,gBACGN,KAAK,CAACG,OAAN,CAAcC,cAAd,CAA6BC,MAA7B,gBACC;AAAK,QAAA,SAAS,EAAEP,MAAM,CAACS,aAAvB;AAAA,kBACGP,KAAK,CAACG,OAAN,CAAcC,cAAd,CAA6BI,GAA7B,CAAiC,CAACC,IAAD,EAAOC,CAAP,kBAChC;AAAa,UAAA,SAAS,EAAEZ,MAAM,CAACa,IAA/B;AAAA,kCACE;AAAK,YAAA,SAAS,EAAEb,MAAM,CAACc,SAAvB;AAAA,oCACE;AAAA,wBAAMH,IAAI,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,yBAAOJ,IAAI,CAACK,MAAL,CAAYC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AAAK,YAAA,SAAS,EAAEjB,MAAM,CAACkB,aAAvB;AAAA,sBACGP,IAAI,CAACK,MAAL,CAAYG,SAAZ,CAAsBT,GAAtB,CAA0B,CAACU,CAAD,EAAIR,CAAJ,kBACzB;AAAA,yBAAYQ,CAAC,CAACC,QAAd,oBAAwB;AAAM,gBAAA,KAAK,EAAE;AAACC,kBAAAA,KAAK,EAAEF,CAAC,CAACG,OAAF,GAAY,OAAZ,GAAsB;AAA9B,iBAAb;AAAA,0BAAwDH,CAAC,CAACI;AAA1D;AAAA;AAAA;AAAA;AAAA,sBAAxB;AAAA,eAAQZ,CAAR;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA,WAAUA,CAAV;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADD,GAgBE;AAjBL;AAAA;AAAA;AAAA;AAAA,YAPF,eA2BE;AAAK,MAAA,SAAS,EAAEZ,MAAM,CAACG,MAAvB;AAAA,gDAEE;AAAM,QAAA,SAAS,EAAEH,MAAM,CAACyB,OAAxB;AAAA,kBACGvB,KAAK,CAACG,OAAN,CAAcqB,YAAd,CAA2BnB;AAD9B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BF,eAiCE;AAAK,MAAA,SAAS,EAAEP,MAAM,CAAC2B,gBAAvB;AAAA,gBACGzB,KAAK,CAACG,OAAN,CAAcqB,YAAd,CAA2BnB,MAA3B,GACCL,KAAK,CAACG,OAAN,CAAcqB,YAAd,CAA2BhB,GAA3B,CAA+B,CAACC,IAAD,EAAOC,CAAP,kBAC7B;AAAA,kBAAYD,IAAI,CAACI;AAAjB,SAAQH,CAAR;AAAA;AAAA;AAAA;AAAA,cADF,CADD,GAKE;AANL;AAAA;AAAA;AAAA;AAAA,YAjCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8CD,CA/CD;;KAAMX,e;AAiDN,eAAeA,eAAf","sourcesContent":["import React from 'react';\n\nimport styles from './StudentProgress.module.scss';\n\nconst StudentProgress = props => {\n  return (\n    <div className={styles.StudentProgress}>\n      <div className={styles.Header}>\n        Completed tests: \n        <span className={styles.Completed}>\n          {props.student.completedtests.length}\n        </span>\n      </div>\n      <div className={styles.CompletedInfo}>\n        {props.student.completedtests.length ? \n          <div className={styles.TestContainer}>\n            {props.student.completedtests.map((test, i) => (\n              <div key={i} className={styles.Test}>\n                <div className={styles.TestTitle}>\n                  <div>{test.title}</div>\n                  <span>{test.result.percentage}%</span>\n                </div>\n                <div className={styles.TestQuestions}>\n                  {test.result.questions.map((q, i) => (\n                    <p key={i}>{q.question} <span style={{color: q.correct ? 'green' : '#E63046'}}>{q.option}</span></p>\n                ))}\n                </div>\n              </div>\n            ))}\n          </div>\n         : null}\n      </div>\n\n      <div className={styles.Header}>\n        Pending tests: \n        <span className={styles.Pending}>\n          {props.student.pendingtests.length}\n        </span>\n      </div>\n      <div className={styles.PendingContainer}>\n        {props.student.pendingtests.length ? \n          props.student.pendingtests.map((test, i) => (\n            <p key={i}>{test.title}</p>\n          ))\n\n         : null}\n      </div>\n\n\n    </div>\n  );\n};\n\nexport default StudentProgress;\n"]},"metadata":{},"sourceType":"module"}