{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/davidsolsona/Documents/GitHub/Legacy/solo-project/client/src/components/Teacher/TestCard/TestCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport AssignTest from './AssignTest/AssignTest';\nimport AssignTestCard from './AssignTestCard/AssignTestCard';\nimport styles from './TestCard.module.scss';\n\nconst TestCard = props => {\n  _s();\n\n  const [assignTest, setAssignTest] = useState(false);\n  const [toggleInfo, setToggleInfo] = useState(true);\n  const students = useSelector(state => state.students);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.TestCard,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.TestInfo,\n        children: props.test.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.TestActions,\n        children: [toggleInfo ? /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-minus\",\n          onClick: () => setToggleInfo(!toggleInfo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-eye\",\n          onClick: () => setToggleInfo(!toggleInfo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 101\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"far fa-paper-plane\",\n          onClick: () => setAssignTest(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: `far fa-trash-alt ${styles.Bin}`,\n          onClick: () => props.deleteTestHandler(props.test._id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.ExtraInfo,\n      style: {\n        display: toggleInfo ? 'block' : 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: '#a92232'\n        },\n        children: \"Pending:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.AssignTest,\n        children: students ? students.map((st, i) => {\n          if (st.pendingtests.some(t => t.id === props.test._id)) {\n            //here\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.StName,\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-user-alt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this), st.name]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this);\n          } else return null;\n        }) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: '#257d4f'\n        },\n        children: \"Completed:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.AssignTest,\n        children: students ? students.map((st, i) => {\n          if (st.completedtests.some(t => t.id === props.test._id)) {\n            //here\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.StName,\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-user-alt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), st.name]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this);\n          } else return null;\n        }) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AssignTestCard, {\n      show: assignTest,\n      close: () => setAssignTest(false),\n      children: /*#__PURE__*/_jsxDEV(AssignTest, {\n        students: students,\n        test: props.test,\n        close: () => setAssignTest(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TestCard, \"lf78pt+S/kVAQsH9+jtNxFFOTQg=\", false, function () {\n  return [useSelector];\n});\n\n_c = TestCard;\nexport default TestCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestCard\");","map":{"version":3,"sources":["/Users/davidsolsona/Documents/GitHub/Legacy/solo-project/client/src/components/Teacher/TestCard/TestCard.js"],"names":["React","useState","useSelector","AssignTest","AssignTestCard","styles","TestCard","props","assignTest","setAssignTest","toggleInfo","setToggleInfo","students","state","TestInfo","test","title","TestActions","Bin","deleteTestHandler","_id","ExtraInfo","display","color","map","st","i","pendingtests","some","t","id","StName","name","completedtests"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport AssignTest from './AssignTest/AssignTest';\nimport AssignTestCard from './AssignTestCard/AssignTestCard';\nimport styles from './TestCard.module.scss';\n\nconst TestCard = props => {\n\n  const [assignTest, setAssignTest] = useState(false);\n  const [toggleInfo, setToggleInfo] = useState(true);\n\n  const students = useSelector(state => state.students);\n\n  return (\n    <React.Fragment>\n      <div className={styles.TestCard}>\n        <div className={styles.TestInfo}>\n          {props.test.title}\n        </div>\n        <div className={styles.TestActions}>\n        {toggleInfo ? <i className=\"fas fa-minus\" onClick={() => setToggleInfo(!toggleInfo)}></i> : <i className=\"fas fa-eye\" onClick={() => setToggleInfo(!toggleInfo)}></i>}\n        <i className=\"fas fa-edit\"></i>\n        <i className=\"far fa-paper-plane\"\n            onClick={() => setAssignTest(true)}/>\n          <i \n          className={`far fa-trash-alt ${styles.Bin}`}\n          onClick={() => props.deleteTestHandler(props.test._id)}/>\n        </div>\n\n      </div>\n      <div \n        className={styles.ExtraInfo}\n        style={{\n          display: toggleInfo ? 'block' : 'none',\n          }}>\n\n        <p style={{color: '#a92232'}}>Pending:</p>\n        <div className={styles.AssignTest}>\n          {students ? \n          students.map((st, i) => {\n            if (st.pendingtests.some(t => t.id === props.test._id)) { //here\n              return (\n                <div className={styles.StName} key={i}>\n                  <i className=\"fas fa-user-alt\"/>{st.name}\n                </div>)\n            } else return null\n          })\n          : null}\n        </div>\n\n        <p style={{color: '#257d4f'}}>Completed:</p>\n        <div className={styles.AssignTest}>\n          {students ? \n          students.map((st, i) => {\n            if (st.completedtests.some(t => t.id === props.test._id)) { //here\n              return (\n                <div className={styles.StName} key={i}>\n                  <i className=\"fas fa-user-alt\"/>{st.name}\n                </div>)\n            } else return null\n          })\n          : null}\n        </div>\n\n      </div>\n      <AssignTestCard\n        show={assignTest}\n        close={() => setAssignTest(false)}\n      >\n        <AssignTest \n          students={students} \n          test={props.test} \n          close={() => setAssignTest(false)}/>\n      </AssignTestCard>\n    </React.Fragment>\n  );\n};\n\nexport default TestCard;\n"]},"metadata":{},"sourceType":"module"}