{"ast":null,"code":"const baseUrl = 'http://localhost:3002';\nexport function getTests() {\n  return fetchTests(`${baseUrl}/test`);\n}\n;\nexport function postTest(test) {\n  return fetchTests(`${baseUrl}/test`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(test)\n  });\n}\n;\nexport function deleteTest(id) {\n  return fetchTests(`${baseUrl}/${id}`, {\n    method: 'DELETE'\n  });\n}\n; // export function getTest () {\n//   return fetchTests(`${baseUrl}/test`, {\n//     method: 'GET'\n//   })\n// }\n// export function updateTest (id, dir) {\n//   return fetchTests(`${baseUrl}/${id}/${dir}`, {\n//     method: 'PUT'\n//   })\n// }\n\nexport function getQuizz(id) {\n  return fetchTests(`${baseUrl}/quiz/${id}`, {\n    method: 'GET'\n  });\n}\n;\nexport function checkAnswer(answerObj) {\n  return fetchTests(`${baseUrl}/quiz`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(answerObj)\n  });\n}\n;\n\nfunction fetchTests(url, options) {\n  return fetch(url, options).then(res => {\n    if (res.status < 400) return res;else Promise.reject(res);\n  }).then(res => {\n    if (res.status !== 204) return res.json();else return res;\n  }).catch(err => console.log(err));\n}","map":{"version":3,"sources":["/Users/davidsolsona/Documents/GitHub/Legacy/solo-project/client/src/testAPI.js"],"names":["baseUrl","getTests","fetchTests","postTest","test","method","headers","body","JSON","stringify","deleteTest","id","getQuizz","checkAnswer","answerObj","url","options","fetch","then","res","status","Promise","reject","json","catch","err","console","log"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAhB;AAEA,OAAO,SAASC,QAAT,GAAqB;AAC1B,SAAOC,UAAU,CAAE,GAAEF,OAAQ,OAAZ,CAAjB;AACD;AAAA;AAED,OAAO,SAASG,QAAT,CAAmBC,IAAnB,EAAyB;AAC9B,SAAOF,UAAU,CAAE,GAAEF,OAAQ,OAAZ,EAAoB;AACnCK,IAAAA,MAAM,EAAE,MAD2B;AAEnCC,IAAAA,OAAO,EAAE;AAAC,sBAAgB;AAAjB,KAF0B;AAGnCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AAH6B,GAApB,CAAjB;AAKD;AAAA;AAED,OAAO,SAASM,UAAT,CAAqBC,EAArB,EAAyB;AAC9B,SAAOT,UAAU,CAAE,GAAEF,OAAQ,IAAGW,EAAG,EAAlB,EAAqB;AACpCN,IAAAA,MAAM,EAAE;AAD4B,GAArB,CAAjB;AAGD;AAAA,C,CAGD;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASO,QAAT,CAAmBD,EAAnB,EAAuB;AAC5B,SAAOT,UAAU,CAAE,GAAEF,OAAQ,SAAQW,EAAG,EAAvB,EAA0B;AACzCN,IAAAA,MAAM,EAAE;AADiC,GAA1B,CAAjB;AAGD;AAAA;AAED,OAAO,SAASQ,WAAT,CAAsBC,SAAtB,EAAiC;AACtC,SAAOZ,UAAU,CAAE,GAAEF,OAAQ,OAAZ,EAAoB;AACnCK,IAAAA,MAAM,EAAE,MAD2B;AAEnCC,IAAAA,OAAO,EAAE;AAAC,sBAAgB;AAAjB,KAF0B;AAGnCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeK,SAAf;AAH6B,GAApB,CAAjB;AAKD;AAAA;;AAED,SAASZ,UAAT,CAAqBa,GAArB,EAA0BC,OAA1B,EAAmC;AACjC,SAAOC,KAAK,CAACF,GAAD,EAAMC,OAAN,CAAL,CACJE,IADI,CACCC,GAAG,IAAI;AACX,QAAIA,GAAG,CAACC,MAAJ,GAAa,GAAjB,EAAsB,OAAOD,GAAP,CAAtB,KACKE,OAAO,CAACC,MAAR,CAAeH,GAAf;AACN,GAJI,EAKJD,IALI,CAKCC,GAAG,IAAI;AACX,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB,OAAOD,GAAG,CAACI,IAAJ,EAAP,CAAxB,KACK,OAAOJ,GAAP;AACN,GARI,EASJK,KATI,CASEC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CATT,CAAP;AAUD","sourcesContent":["const baseUrl = 'http://localhost:3002';\n\nexport function getTests () {\n  return fetchTests(`${baseUrl}/test`);\n};\n\nexport function postTest (test) {\n  return fetchTests(`${baseUrl}/test`, {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify(test)\n  });\n};\n\nexport function deleteTest (id) {\n  return fetchTests(`${baseUrl}/${id}`, {\n    method: 'DELETE'\n  });\n};\n\n\n// export function getTest () {\n//   return fetchTests(`${baseUrl}/test`, {\n//     method: 'GET'\n//   })\n// }\n\n// export function updateTest (id, dir) {\n//   return fetchTests(`${baseUrl}/${id}/${dir}`, {\n//     method: 'PUT'\n//   })\n// }\n\nexport function getQuizz (id) {\n  return fetchTests(`${baseUrl}/quiz/${id}`, {\n    method: 'GET'\n  });\n};\n\nexport function checkAnswer (answerObj) {\n  return fetchTests(`${baseUrl}/quiz`, {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify(answerObj)\n  });\n};\n\nfunction fetchTests (url, options) {\n  return fetch(url, options)\n    .then(res => {\n      if (res.status < 400) return res;\n      else Promise.reject(res)\n    })\n    .then(res => {\n      if (res.status !== 204) return res.json();\n      else return res;\n    })\n    .catch(err => console.log(err));\n}\n"]},"metadata":{},"sourceType":"module"}