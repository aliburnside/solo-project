{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/davidsolsona/Documents/GitHub/Legacy/solo-project/client/src/components/Teacher/TestCard/AssignTest/AssignTest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport SelectStudent from './SelectStudent/SelectStudent';\nimport { updateStudentsPendingTests } from '../../../../store/actions/studentListActions';\nimport styles from './AssignTest.module.scss';\n\nconst AssignTest = props => {\n  _s();\n\n  const [selectedSS, setSelectedSS] = useState([]);\n  const dispatch = useDispatch();\n\n  const selectNameHandler = st => {\n    const filter = selectedSS.filter(s => s._id !== st._id);\n\n    if (filter.length === selectedSS.length) {\n      setSelectedSS([...selectedSS, st]);\n    } else {\n      setSelectedSS(filter);\n    }\n  };\n\n  const assignTestsHandler = selection => {\n    const testObject = {\n      id: props.test._id,\n      title: props.test.title\n    };\n    const studentsToUpdate = selection.map(ss => ss._id);\n    dispatch(updateStudentsPendingTests(props.test._id, 'pending', {\n      test: testObject,\n      ssids: studentsToUpdate\n    }));\n    setTimeout(() => {\n      setSelectedSS([]);\n      props.close();\n    }, 500);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.AssignTest,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Students,\n      children: props.students.map((st, i) => {\n        if (!st.pendingtests.some(t => t.id === props.test._id)) {\n          // here\n          return /*#__PURE__*/_jsxDEV(SelectStudent, {\n            student: st,\n            selectNameHandler: selectNameHandler,\n            children: st.name\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this);\n        } else return null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Assign,\n      onClick: () => assignTestsHandler(selectedSS),\n      children: [\"Send test \", /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"far fa-paper-plane\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AssignTest, \"TNLdiPPY4qCGjdhUP1O5xWIPWa8=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AssignTest;\nexport default AssignTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignTest\");","map":{"version":3,"sources":["/Users/davidsolsona/Documents/GitHub/Legacy/solo-project/client/src/components/Teacher/TestCard/AssignTest/AssignTest.js"],"names":["React","useState","useDispatch","SelectStudent","updateStudentsPendingTests","styles","AssignTest","props","selectedSS","setSelectedSS","dispatch","selectNameHandler","st","filter","s","_id","length","assignTestsHandler","selection","testObject","id","test","title","studentsToUpdate","map","ss","ssids","setTimeout","close","Students","students","i","pendingtests","some","t","name","Assign"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,SAASC,0BAAT,QAA2C,8CAA3C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAAA;;AAE1B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMS,QAAQ,GAAGR,WAAW,EAA5B;;AAEA,QAAMS,iBAAiB,GAAGC,EAAE,IAAI;AAC9B,UAAMC,MAAM,GAAGL,UAAU,CAACK,MAAX,CAAkBC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUH,EAAE,CAACG,GAApC,CAAf;;AACA,QAAIF,MAAM,CAACG,MAAP,KAAkBR,UAAU,CAACQ,MAAjC,EAAyC;AACvCP,MAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgBI,EAAhB,CAAD,CAAb;AACD,KAFD,MAEO;AACLH,MAAAA,aAAa,CAACI,MAAD,CAAb;AACD;AACF,GAPD;;AASA,QAAMI,kBAAkB,GAAIC,SAAD,IAAe;AAExC,UAAMC,UAAU,GAAG;AAACC,MAAAA,EAAE,EAAEb,KAAK,CAACc,IAAN,CAAWN,GAAhB;AAAqBO,MAAAA,KAAK,EAAEf,KAAK,CAACc,IAAN,CAAWC;AAAvC,KAAnB;AACA,UAAMC,gBAAgB,GAAGL,SAAS,CAACM,GAAV,CAAcC,EAAE,IAAIA,EAAE,CAACV,GAAvB,CAAzB;AAEAL,IAAAA,QAAQ,CAACN,0BAA0B,CAACG,KAAK,CAACc,IAAN,CAAWN,GAAZ,EAAiB,SAAjB,EAA4B;AAC7DM,MAAAA,IAAI,EAAEF,UADuD;AAE7DO,MAAAA,KAAK,EAAEH;AAFsD,KAA5B,CAA3B,CAAR;AAIAI,IAAAA,UAAU,CAAC,MAAM;AACflB,MAAAA,aAAa,CAAC,EAAD,CAAb;AACAF,MAAAA,KAAK,CAACqB,KAAN;AACD,KAHS,EAGP,GAHO,CAAV;AAID,GAbD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAEvB,MAAM,CAACC,UAAvB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAED,MAAM,CAACwB,QAAvB;AAAA,gBACGtB,KAAK,CAACuB,QAAN,CAAeN,GAAf,CAAmB,CAACZ,EAAD,EAAKmB,CAAL,KAAW;AAC7B,YAAI,CAACnB,EAAE,CAACoB,YAAH,CAAgBC,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACd,EAAF,KAASb,KAAK,CAACc,IAAN,CAAWN,GAA9C,CAAL,EAAyD;AAAE;AACzD,8BACE,QAAC,aAAD;AACE,YAAA,OAAO,EAAEH,EADX;AAGE,YAAA,iBAAiB,EAAED,iBAHrB;AAAA,sBAIEC,EAAE,CAACuB;AAJL,aAEOJ,CAFP;AAAA;AAAA;AAAA;AAAA,kBADF;AAOD,SARD,MAQO,OAAO,IAAP;AACR,OAVA;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAiBE;AAAK,MAAA,SAAS,EAAE1B,MAAM,CAAC+B,MAAvB;AAA+B,MAAA,OAAO,EAAE,MAAMnB,kBAAkB,CAACT,UAAD,CAAhE;AAAA,4CACY;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CApDD;;GAAMF,U;UAGaJ,W;;;KAHbI,U;AAsDN,eAAeA,UAAf","sourcesContent":["import React, { useState} from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport SelectStudent from './SelectStudent/SelectStudent';\nimport { updateStudentsPendingTests } from '../../../../store/actions/studentListActions';\nimport styles from './AssignTest.module.scss';\n\nconst AssignTest = props => {\n\n  const [selectedSS, setSelectedSS] = useState([]);\n  const dispatch = useDispatch();\n\n  const selectNameHandler = st => {\n    const filter = selectedSS.filter(s => s._id !== st._id);\n    if (filter.length === selectedSS.length) {\n      setSelectedSS([...selectedSS, st]);\n    } else {\n      setSelectedSS(filter);\n    }\n  };\n\n  const assignTestsHandler = (selection) => {\n\n    const testObject = {id: props.test._id, title: props.test.title};\n    const studentsToUpdate = selection.map(ss => ss._id);\n\n    dispatch(updateStudentsPendingTests(props.test._id, 'pending', {\n      test: testObject,\n      ssids: studentsToUpdate\n    }));\n    setTimeout(() => {\n      setSelectedSS([]);\n      props.close();\n    }, 500);\n  }\n\n  return (\n    <div className={styles.AssignTest}>\n      <div className={styles.Students}>\n        {props.students.map((st, i) => {\n          if (!st.pendingtests.some(t => t.id === props.test._id)) { // here\n            return (\n              <SelectStudent\n                student={st}\n                key={i}\n                selectNameHandler={selectNameHandler}\n              >{st.name}</SelectStudent>\n            )\n          } else return null\n        })}\n      </div>\n      {/* <div className={styles.Assign}>\n        {selectedSS.length ? selectedSS.map(st => st.name).join(', ') : null}\n      </div> */}\n      <div className={styles.Assign} onClick={() => assignTestsHandler(selectedSS)}>\n        Send test <i className=\"far fa-paper-plane\"/>\n      </div>\n    </div>\n  );\n};\n\nexport default AssignTest;\n"]},"metadata":{},"sourceType":"module"}