{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/davidsolsona/Documents/GitHub/Legacy/solo-project/client/src/components/Student/TestDashboard/Feedback/Feedback.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styles from './Feedback.module.scss';\nimport * as actionTypes from '../../../../store/actions/actionTypes';\nimport * as confetti from 'canvas-confetti';\n\nconst Feedback = props => {\n  _s();\n\n  const student = useSelector(state => state.currentStudent);\n  let sentence = props.quizzResults.result.percentage > 60 ? `Well done, ${student.name}!` : `Good luck next time, ${student.name}`;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setTimeout(() => {\n      confetti.create(undefined, {\n        resize: true,\n        useWorker: false\n      })({\n        startVelocity: 80,\n        particleCount: 200,\n        gravity: 2,\n        ticks: 400,\n        zIndex: 200,\n        origin: {\n          x: 0.5,\n          y: 0.7\n        }\n      });\n    }, 300);\n    setTimeout(() => {\n      confetti.create(undefined, {\n        resize: true,\n        useWorker: false\n      })({\n        startVelocity: 80,\n        particleCount: 300,\n        gravity: 2,\n        ticks: 400,\n        zIndex: 200,\n        origin: {\n          x: 0.4,\n          y: 0.8\n        }\n      });\n    }, 400);\n    setTimeout(() => {\n      confetti.create(undefined, {\n        resize: true,\n        useWorker: false\n      })({\n        startVelocity: 80,\n        particleCount: 200,\n        gravity: 2,\n        ticks: 400,\n        zIndex: 200,\n        origin: {\n          x: 0.6,\n          y: 0.7\n        }\n      });\n    }, 500);\n    return () => dispatch({\n      type: actionTypes.RESET_PROGRESS\n    });\n  }, [dispatch]);\n\n  const closeHandler = () => {\n    props.history.replace('/user');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.Feedback,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Close,\n      onClick: closeHandler,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"far fa-times-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 60\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Message,\n      children: sentence\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Progress,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Circle,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.SliceRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.SliceLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.Percentage,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.Number,\n            children: [props.quizzResults.result.percentage, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Feedback, \"WbYpnRgCTG8x7fZdDY7JhtBRcYk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Feedback;\nexport default _c2 = withRouter(Feedback);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Feedback\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/davidsolsona/Documents/GitHub/Legacy/solo-project/client/src/components/Student/TestDashboard/Feedback/Feedback.js"],"names":["React","useEffect","withRouter","useSelector","useDispatch","styles","actionTypes","confetti","Feedback","props","student","state","currentStudent","sentence","quizzResults","result","percentage","name","dispatch","setTimeout","create","undefined","resize","useWorker","startVelocity","particleCount","gravity","ticks","zIndex","origin","x","y","type","RESET_PROGRESS","closeHandler","history","replace","Close","Message","Progress","Circle","SliceRight","SliceLeft","Percentage","Number"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styles from './Feedback.module.scss';\nimport * as actionTypes from '../../../../store/actions/actionTypes';\nimport * as confetti from 'canvas-confetti';\n\nconst Feedback = props => {\n\n  const student = useSelector(state => state.currentStudent);\n\n  let sentence = props.quizzResults.result.percentage > 60 ? \n    `Well done, ${student.name}!` :\n    `Good luck next time, ${student.name}`;\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setTimeout(() => {\n      confetti.create(undefined, { resize: true, useWorker: false })({\n        startVelocity: 80,\n        particleCount: 200,\n        gravity: 2,\n        ticks: 400,\n        zIndex: 200,\n        origin: {\n          x: 0.5,\n          y: 0.7,\n        },\n      });\n    }, 300);\n    setTimeout(() => {\n      confetti.create(undefined, { resize: true, useWorker: false })({\n        startVelocity: 80,\n        particleCount: 300,\n        gravity: 2,\n        ticks: 400,\n        zIndex: 200,\n        origin: {\n          x: 0.4,\n          y: 0.8,\n        },\n      });\n    }, 400);\n    setTimeout(() => {\n      confetti.create(undefined, { resize: true, useWorker: false })({\n        startVelocity: 80,\n        particleCount: 200,\n        gravity: 2,\n        ticks: 400,\n        zIndex: 200,\n        origin: {\n          x: 0.6,\n          y: 0.7,\n        },\n      });\n    }, 500);\n    \n    return () => dispatch({type: actionTypes.RESET_PROGRESS})\n  }, [dispatch])\n  \n  const closeHandler = () => {\n    props.history.replace('/user')\n  }\n\n  return (\n    <div className={styles.Feedback}>\n      <div className={styles.Close} onClick={closeHandler}><i className=\"far fa-times-circle\"></i></div>\n      <div className={styles.Message}>\n        {sentence}\n      </div>\n      <div className={styles.Progress}>\n        <div className={styles.Circle}>\n          <div className={styles.SliceRight}/>\n          <div className={styles.SliceLeft}/>\n          <div className={styles.Percentage}>\n            <div className={styles.Number}>\n              {props.quizzResults.result.percentage}%\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Feedback);\n"]},"metadata":{},"sourceType":"module"}